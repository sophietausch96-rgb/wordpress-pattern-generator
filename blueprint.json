{
  "preferredVersions": {
    "php": "8.2",
    "wp": "latest"
  },
  "features": {
    "networking": true
  },
  "steps": [
    { "step": "login", "username": "admin", "password": "password" },
    { "step": "writeFile",
      "path": "/wp-content/plugins/ai-patterns/ai-patterns.php",
      "data": "<?php\n/**\n * Plugin Name: AI Patterns\n * Description: Erzeugt Gutenberg Block Patterns via AI Prompt.\n * Version: 0.1.0\n */\n\nif (!defined('ABSPATH')) { exit; }\n\nadd_action('admin_menu', function(){\n  add_menu_page(\n    'AI Pattern Maker','AI Pattern Maker','manage_options','ai-patterns','ai_patterns_admin_page','dashicons-art',58\n  );\n});\n\nfunction ai_patterns_admin_page(){\n  $nonce = wp_create_nonce('wp_rest');\n  $rest  = esc_url_raw( rest_url('ai-patterns/v1/create') );\n  echo '<div class=\\\"wrap\\\"><h1>AI Pattern Maker</h1>';\n  echo '<p>Trage deinen API-Key ein, schreibe eine Beschreibung und generiere dein Pattern.</p>';\n  echo '<label>API Key: <input id=\\\"ai_api_key\\\" type=\\\"password\\\" style=\\\"width:420px\\\" placeholder=\\\"sk-...\\\" /></label>';\n  echo '<br><br><label>Prompt:<br><textarea id=\\\"ai_prompt\\\" rows=\\\"5\\\" style=\\\"width:100%\\\"></textarea></label>';\n  echo '<br><button id=\\\"ai_generate\\\" class=\\\"button button-primary\\\">Pattern generieren</button>';\n  echo '<span id=\\\"ai_status\\\" style=\\\"margin-left:10px\\\"></span>';\n  echo '<script>window.AI_PATTERNS={nonce:". $nonce .", endpoint:\\"". $rest ."\\"};</script>';\n  echo '</div>';\n}\n\nadd_action('admin_enqueue_scripts', function($hook){\n  if($hook !== 'toplevel_page_ai-patterns'){ return; }\n  wp_enqueue_script('ai-patterns-admin', plugins_url('admin.js', __FILE__), [], '0.1.0', true);\n});\n\nadd_action('rest_api_init', function(){\n  register_rest_route('ai-patterns/v1','/create',[\n    'methods'  => 'POST',\n    'permission_callback' => function(){ return current_user_can('edit_posts'); },\n    'args' => [\n      'title'   => ['required'=>true,'type'=>'string'],\n      'content' => ['required'=>true,'type'=>'string'],\n    ],\n    'callback' => function( WP_REST_Request $req ){\n      $title = sanitize_text_field($req->get_param('title'));\n      $content = $req->get_param('content');\n      $slug = 'ai-pattern-' . wp_generate_password(8,false,false);\n      register_block_pattern($slug, [\n        'title'   => $title,\n        'content' => $content,\n        'categories' => ['ai-patterns'],\n      ]);\n      register_block_pattern_category('ai-patterns', ['label' => 'AI Patterns']);\n      return new WP_REST_Response(['ok'=>true,'slug'=>$slug], 200);\n    }\n  ]);\n});\n" },
    { "step": "writeFile",
      "path": "/wp-content/plugins/ai-patterns/admin.js",
      "data": "/* global wp, AI_PATTERNS */\n(async function(){\n  const btn = document.getElementById('ai_generate');\n  const statusEl = document.getElementById('ai_status');\n  const promptEl = document.getElementById('ai_prompt');\n  const keyEl = document.getElementById('ai_api_key');\n\n  try { keyEl.value = localStorage.getItem('ai_api_key') || ''; } catch(e) {}\n\n  function setStatus(msg){ statusEl.textContent = msg; }\n\n  async function callAI(prompt, apiKey){\n    const res = await fetch('https://openrouter.ai/api/v1/chat/completions',{\n      method:'POST',\n      headers:{'Content-Type':'application/json','Authorization':'Bearer ' + apiKey},\n      body: JSON.stringify({\n        model: 'openai/gpt-4o-mini',\n        messages: [\n          {role:'system', content:'Du erzeugst nur Gutenberg-Block-HTML, keine Erklärungen.'},\n          {role:'user', content: 'Baue ein responsives Gutenberg-Layout. Nur Core-Blöcke. ' + prompt}\n        ],\n        temperature: 0.4\n      })\n    });\n    if(!res.ok){ throw new Error('AI-API Fehler: ' + res.status); }\n    const data = await res.json();\n    const text = data.choices?.[0]?.message?.content || '';\n    return text.trim();\n  }\n\n  btn?.addEventListener('click', async ()=>{\n    const apiKey = keyEl.value.trim();\n    const prompt = promptEl.value.trim();\n    if(!apiKey){ alert('Bitte API Key eintragen.'); return; }\n    if(!prompt){ alert('Bitte Prompt eingeben.'); return; }\n\n    try { localStorage.setItem('ai_api_key', apiKey); } catch(e) {}\n\n    setStatus('Generiere...');\n    try {\n      const html = await callAI(prompt, apiKey);\n      if(!html || html.indexOf('<!-- wp:') === -1){\n        throw new Error('Antwort enthält kein Gutenberg-Block-HTML.');\n      }\n      const title = 'AI Pattern – ' + (prompt.slice(0, 32) || 'Entwurf');\n      const res = await fetch(AI_PATTERNS.endpoint,{\n        method:'POST',\n        headers: {\n          'Content-Type':'application/json',\n          'X-WP-Nonce': AI_PATTERNS.nonce\n        },\n        body: JSON.stringify({title: title, content: html})\n      });\n      if(!res.ok){ throw new Error('Pattern-Registrierung fehlgeschlagen'); }\n      setStatus('Fertig! Öffne den Block-Inserter → Kategorie \\\"AI Patterns\\\".');\n    } catch(err){\n      console.error(err);\n      setStatus('Fehler: ' + err.message);\n    }\n  });\n})();\n" },
    { "step": "activatePlugin", "plugin": "ai-patterns/ai-patterns.php" },
    { "step": "installTheme",
      "themeZipFile": "https://downloads.wordpress.org/theme/twentytwentyfour.latest-stable.zip"
    },
    { "step": "activateTheme", "theme": "twentytwentyfour" },
    { "step": "navigate", "url": "/wp-admin/post-new.php?post_type=page" }
  ]
}
